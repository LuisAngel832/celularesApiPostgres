name: deploy-pg-api

on:
  push:
    branches: ["master"]

jobs:
  deploy-pg-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code # Paso para obtener tu código
        uses: actions/checkout@v4

      - name: Set up Node.js # Paso para configurar Node.js si tu app lo necesita (quizás para algún paso de build frontend, etc.)
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Asegúrate que esta es la versión que necesitas

      - name: Set up Docker Buildx # Paso añadido para configurar Buildx
        uses: docker/setup-buildx-action@v3 # Usa la versión más reciente disponible

      - name: Preparar archivo .env # Crear el archivo .env con secretos
        run: |
          echo 'Creando archivo .env...'
          touch .env
          echo 'DEV_DATABASE_URL=${{ secrets.PG_CONN }}' >> .env
          echo 'Contenido de .env:'
          cat .env

      - name: List files before build # Paso añadido para verificar archivos antes de construir
        run: |
          echo "Listando archivos en el directorio de trabajo:"
          ls -la

      - name: Build Docker image (Test 1)
        run: docker build -t ${{ secrets.DOCKER_USER }}/celularesapipostgres:${{ github.sha }} .

      - name: List Docker images
        run: docker images


        
      - name: List Docker images # Listar imágenes locales después del build
        run: docker images

      - name: Docker login # Iniciar sesión en Docker Hub (u otro registro)
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Push Docker image # Subir la imagen al registro
        run: docker push ${{ secrets.DOCKER_USER }}/celularesapipostgres:${{ github.sha }}
